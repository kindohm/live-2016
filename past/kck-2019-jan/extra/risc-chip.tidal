setcps (140/120/2)

let pat0 = "{0 ~ ~ ~ ~}%4"
    pat1 = "{1 ~ ~ ~ ~}%4"
    patmod p = foldEvery [2,3,4] (0.25 ~>) $ rep' 5 $ p


d1 silence


d2 $ slow 2 $
  sound "milong:2([9 7 11 10]/4,16)"
  # begin "{0.05 0.05 0.05}%1" # cut "921" # gain "0.9"

d2 $ sound "milong:2/4" # cut "921" # gain "0.9"

hush

d1 silence

d1 
  $ degradeBy 0.5
  $ whenmod 15 12 (iter 8)
  $ whenmod 14 11 (move)
  $ every 7 (randDelay)
  $ every 8 (# accelerate "-1 1") 
  $ every 4 (rip 0.8 0.0625)
  $ every 5 (rip' 0 1 8 0.8 0.0625)
  $ every 6 (crushit)
  $ stack [
    degradeBy 0.2 $ randcat [ brakk "amenall2*8", brakk "jung6*8", brakk "jung5*8", brakk "jung4*8" ] # gain 1.1,
    whenmod 20 16 (g) $ patmod $ n pat0 # s "risckit" # gain "1.1",
    iter 8 $ sound "~ risckit:2",
    every 7 (stut' 5 0.0625 (|* gain "0.5")) $
      whenmod 4 2 (0.125 ~>) $ sound "~ risckit:1",
    whenmod 7 5 (slow (4/3)) $ whenmod 5 3 (density 2) $ sound "risckit:4*8",
    sound "risckit:7/16",
    whenmod 22 17 (const $ sound "~") $
      rarely (# up "-1") $ patmod $ (|+ n (slow 49 $ irand 49)) $ n pat0
        # s "riscm" # cut "20" # gain "0.97",
    whenmod 18 15 (iter 8) $ (|+ up "[1 -2 0 -5 3 -1 5]/28") $ patmod $ every 9 (# s "toast") $ gain pat1
      # s "mi" # n "[0 1 5 6 17 7 8 9 10 11 12 13 15 17]/56" # cut "2" # gain "0.9" ]



hush

